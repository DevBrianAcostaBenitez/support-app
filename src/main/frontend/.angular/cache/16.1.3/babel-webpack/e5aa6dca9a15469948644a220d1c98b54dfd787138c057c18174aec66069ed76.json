{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/request.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nclass EditRequestComponent {\n  constructor(requestService, route) {\n    this.requestService = requestService;\n    this.route = route;\n    this.name = '';\n    this.date = new Date();\n    this.subject = '';\n    this.description = '';\n    this.requestService.getRequestbyId(this.id).subscribe(response => this.request = response);\n    this.name = this.request.name;\n    this.subject = this.request.subject;\n    this.description = this.request.description;\n    this.date = this.request.date;\n  }\n  ngOnInit() {\n    // this.route.paramMap.subscribe(params => {\n    // const requestIdParam = params.get('id');\n    // if (requestIdParam !== null) {\n    // this.id = +requestIdParam;\n    // this.requestService.getRequestbyId(this.id);\n    // this.populateFormWithRequestData();\n    // }\n    // });\n  }\n  populateFormWithRequestData() {\n    if (this.requestService) {\n      this.name = \"\";\n      this.subject = \"\";\n      this.description = \"\";\n      \"\";\n      this.date = this.request.date;\n      console.log(this.request);\n    }\n  }\n  formatDate(date) {\n    const formattedDate = new Date(date).toISOString().split('T')[0];\n    return formattedDate;\n  }\n  saveRequest() {\n    let requestToSave = {\n      id: 1,\n      name: this.name,\n      subject: this.subject,\n      description: this.description,\n      date: this.date\n    };\n    this.requestService.updateRequest(this.id, requestToSave).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n}\nEditRequestComponent.ɵfac = function EditRequestComponent_Factory(t) {\n  return new (t || EditRequestComponent)(i0.ɵɵdirectiveInject(i1.RequestService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nEditRequestComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditRequestComponent,\n  selectors: [[\"app-edit-request\"]],\n  inputs: {\n    id: \"id\"\n  },\n  decls: 25,\n  vars: 4,\n  consts: [[\"action\", \"\"], [1, \"row\"], [1, \"col-xs-12\"], [1, \"form-group\"], [\"for\", \"nombre\"], [\"type\", \"text\", \"name\", \"name\", \"id\", \"form__nombre\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"date\"], [\"type\", \"date\", \"name\", \"date\", \"id\", \"form__date\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"subject\"], [\"type\", \"text\", \"name\", \"subject\", \"id\", \"form__subject\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"id\", \"form__description\", \"name\", \"description\", \"rows\", \"4\", \"cols\", \"50\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\"], [\"type\", \"submit\", 3, \"click\"]],\n  template: function EditRequestComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"label\", 4);\n      i0.ɵɵtext(5, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function EditRequestComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Fecha\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function EditRequestComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.date = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Tema\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function EditRequestComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.subject = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\", 10);\n      i0.ɵɵtext(17, \"Descripcion de la consulta\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"textarea\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function EditRequestComponent_Template_textarea_ngModelChange_18_listener($event) {\n        return ctx.description = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(19, \"div\", 1)(20, \"div\", 2)(21, \"button\", 12);\n      i0.ɵɵtext(22, \"Cancelar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function EditRequestComponent_Template_button_click_23_listener() {\n        return ctx.saveRequest();\n      });\n      i0.ɵɵtext(24, \"Guardar\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.date);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.subject);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.description);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { EditRequestComponent };","map":{"version":3,"names":["EditRequestComponent","constructor","requestService","route","name","date","Date","subject","description","getRequestbyId","id","subscribe","response","request","ngOnInit","populateFormWithRequestData","console","log","formatDate","formattedDate","toISOString","split","saveRequest","requestToSave","updateRequest","error","i0","ɵɵdirectiveInject","i1","RequestService","i2","ActivatedRoute","selectors","inputs","decls","vars","consts","template","EditRequestComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EditRequestComponent_Template_input_ngModelChange_6_listener","$event","EditRequestComponent_Template_input_ngModelChange_10_listener","EditRequestComponent_Template_input_ngModelChange_14_listener","EditRequestComponent_Template_textarea_ngModelChange_18_listener","EditRequestComponent_Template_button_click_23_listener","ɵɵadvance","ɵɵproperty"],"sources":["G:\\Documentos 2023\\F5\\2023-0704 Project Support\\support-app\\src\\main\\frontend\\src\\app\\views\\edit-request\\edit-request.component.ts","G:\\Documentos 2023\\F5\\2023-0704 Project Support\\support-app\\src\\main\\frontend\\src\\app\\views\\edit-request\\edit-request.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { RequestService } from 'src/app/services/request.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Request2 } from 'src/app/models/request.model';\r\n@Component({\r\n  selector: 'app-edit-request',\r\n  templateUrl: './edit-request.component.html',\r\n  styleUrls: ['./edit-request.component.scss']\r\n})\r\nexport class EditRequestComponent {\r\n  request!:Request2;\r\n  @Input() id!:number;\r\n  name:string = '';\r\n  date:Date =new Date();\r\n  subject:string = '';\r\n  description:string = '';\r\n  constructor(private requestService:RequestService, private route: ActivatedRoute){\r\n    this.requestService.getRequestbyId(this.id).subscribe((response)=>this.request = response);\r\n    this.name = this.request.name;\r\n    this.subject = this.request.subject;\r\n    this.description = this.request.description;\r\n    this.date = this.request.date;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.route.paramMap.subscribe(params => {\r\n      // const requestIdParam = params.get('id');\r\n      // if (requestIdParam !== null) {\r\n        // this.id = +requestIdParam;\r\n        // this.requestService.getRequestbyId(this.id);\r\n        // this.populateFormWithRequestData();\r\n      // }\r\n    // });\r\n  }\r\n  \r\n  populateFormWithRequestData(){\r\n    if (this.requestService) {\r\n      this.name = \"\";\r\n      this.subject = \"\";\r\n      this.description = \"\";\"\"\r\n      this.date = this.request.date;      \r\n      console.log(this.request)\r\n    }\r\n  }\r\n \r\n  \r\n  formatDate(date: Date): string {\r\n    const formattedDate = new Date(date).toISOString().split('T')[0];\r\n    return formattedDate;\r\n  }\r\n\r\n  saveRequest(){    \r\n    let requestToSave = {\r\n      id:1,\r\n    name:this.name,\r\n    subject:this.subject,\r\n    description:this.description,\r\n    date:this.date\r\n    };\r\n    \r\n    this.requestService.updateRequest(this.id,requestToSave).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<form action=\"\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-12\">\r\n            <div class=\"form-group\">\r\n                <label for=\"nombre\">Nombre</label>\r\n                <input  type=\"text\" name=\"name\" id=\"form__nombre\" class=\"form-control\" [(ngModel)]=\"name\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"date\">Fecha</label>\r\n                <input type=\"date\" name=\"date\" id=\"form__date\" [(ngModel)]=\"date\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"subject\">Tema</label>\r\n                <input type=\"text\" name=\"subject\" id=\"form__subject\" [(ngModel)]=\"subject\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"description\">Descripcion de la consulta</label>\r\n                <textarea id=\"form__description\" name=\"description\" rows=\"4\" cols=\"50\" [(ngModel)]=\"description\"></textarea>                \r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-12\">\r\n            <button type=\"button\">Cancelar</button>\r\n            <button (click)='saveRequest()' type=\"submit\">Guardar</button>\r\n        </div>\r\n    </div>\r\n</form>\r\n"],"mappings":";;;;AAIA,MAKaA,oBAAoB;EAO/BC,YAAoBC,cAA6B,EAAUC,KAAqB;IAA5D,KAAAD,cAAc,GAAdA,cAAc;IAAyB,KAAAC,KAAK,GAALA,KAAK;IAJhE,KAAAC,IAAI,GAAU,EAAE;IAChB,KAAAC,IAAI,GAAO,IAAIC,IAAI,EAAE;IACrB,KAAAC,OAAO,GAAU,EAAE;IACnB,KAAAC,WAAW,GAAU,EAAE;IAErB,IAAI,CAACN,cAAc,CAACO,cAAc,CAAC,IAAI,CAACC,EAAE,CAAC,CAACC,SAAS,CAAEC,QAAQ,IAAG,IAAI,CAACC,OAAO,GAAGD,QAAQ,CAAC;IAC1F,IAAI,CAACR,IAAI,GAAG,IAAI,CAACS,OAAO,CAACT,IAAI;IAC7B,IAAI,CAACG,OAAO,GAAG,IAAI,CAACM,OAAO,CAACN,OAAO;IACnC,IAAI,CAACC,WAAW,GAAG,IAAI,CAACK,OAAO,CAACL,WAAW;IAC3C,IAAI,CAACH,IAAI,GAAG,IAAI,CAACQ,OAAO,CAACR,IAAI;EAC/B;EAEAS,QAAQA,CAAA;IACN;IACE;IACA;IACE;IACA;IACA;IACF;IACF;EAAA;EAGFC,2BAA2BA,CAAA;IACzB,IAAI,IAAI,CAACb,cAAc,EAAE;MACvB,IAAI,CAACE,IAAI,GAAG,EAAE;MACd,IAAI,CAACG,OAAO,GAAG,EAAE;MACjB,IAAI,CAACC,WAAW,GAAG,EAAE;MAAC,EAAE;MACxB,IAAI,CAACH,IAAI,GAAG,IAAI,CAACQ,OAAO,CAACR,IAAI;MAC7BW,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,OAAO,CAAC;;EAE7B;EAGAK,UAAUA,CAACb,IAAU;IACnB,MAAMc,aAAa,GAAG,IAAIb,IAAI,CAACD,IAAI,CAAC,CAACe,WAAW,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChE,OAAOF,aAAa;EACtB;EAEAG,WAAWA,CAAA;IACT,IAAIC,aAAa,GAAG;MAClBb,EAAE,EAAC,CAAC;MACNN,IAAI,EAAC,IAAI,CAACA,IAAI;MACdG,OAAO,EAAC,IAAI,CAACA,OAAO;MACpBC,WAAW,EAAC,IAAI,CAACA,WAAW;MAC5BH,IAAI,EAAC,IAAI,CAACA;KACT;IAED,IAAI,CAACH,cAAc,CAACsB,aAAa,CAAC,IAAI,CAACd,EAAE,EAACa,aAAa,CAAC,CAACZ,SAAS,CAC/DC,QAAQ,IAAI;MACXI,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;IACvB,CAAC,EACAa,KAAK,IAAI;MACRT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;IACpB,CAAC,CACF;EACH;;AA3DWzB,oBAAoB,C;mBAApBA,oBAAoB,EAAA0B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;AAAA;AAApB/B,oBAAoB,C;QAApBA,oBAAoB;EAAAgC,SAAA;EAAAC,MAAA;IAAAvB,EAAA;EAAA;EAAAwB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTjCb,EAAA,CAAAe,cAAA,cAAgB;MAIoBf,EAAA,CAAAgB,MAAA,aAAM;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MAClCjB,EAAA,CAAAe,cAAA,eAA0F;MAAnBf,EAAA,CAAAkB,UAAA,2BAAAC,6DAAAC,MAAA;QAAA,OAAAN,GAAA,CAAApC,IAAA,GAAA0C,MAAA;MAAA,EAAkB;MAAzFpB,EAAA,CAAAiB,YAAA,EAA0F;MAE9FjB,EAAA,CAAAe,cAAA,aAAwB;MACFf,EAAA,CAAAgB,MAAA,YAAK;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MAC/BjB,EAAA,CAAAe,cAAA,gBAAkE;MAAnBf,EAAA,CAAAkB,UAAA,2BAAAG,8DAAAD,MAAA;QAAA,OAAAN,GAAA,CAAAnC,IAAA,GAAAyC,MAAA;MAAA,EAAkB;MAAjEpB,EAAA,CAAAiB,YAAA,EAAkE;MAEtEjB,EAAA,CAAAe,cAAA,cAAwB;MACCf,EAAA,CAAAgB,MAAA,YAAI;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MACjCjB,EAAA,CAAAe,cAAA,gBAA2E;MAAtBf,EAAA,CAAAkB,UAAA,2BAAAI,8DAAAF,MAAA;QAAA,OAAAN,GAAA,CAAAjC,OAAA,GAAAuC,MAAA;MAAA,EAAqB;MAA1EpB,EAAA,CAAAiB,YAAA,EAA2E;MAE/EjB,EAAA,CAAAe,cAAA,cAAwB;MACKf,EAAA,CAAAgB,MAAA,kCAA0B;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MAC3DjB,EAAA,CAAAe,cAAA,oBAAiG;MAA1Bf,EAAA,CAAAkB,UAAA,2BAAAK,iEAAAH,MAAA;QAAA,OAAAN,GAAA,CAAAhC,WAAA,GAAAsC,MAAA;MAAA,EAAyB;MAACpB,EAAA,CAAAiB,YAAA,EAAW;MAIxHjB,EAAA,CAAAe,cAAA,cAAiB;MAEaf,EAAA,CAAAgB,MAAA,gBAAQ;MAAAhB,EAAA,CAAAiB,YAAA,EAAS;MACvCjB,EAAA,CAAAe,cAAA,kBAA8C;MAAtCf,EAAA,CAAAkB,UAAA,mBAAAM,uDAAA;QAAA,OAASV,GAAA,CAAAlB,WAAA,EAAa;MAAA,EAAC;MAAeI,EAAA,CAAAgB,MAAA,eAAO;MAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;MAnBajB,EAAA,CAAAyB,SAAA,GAAkB;MAAlBzB,EAAA,CAAA0B,UAAA,YAAAZ,GAAA,CAAApC,IAAA,CAAkB;MAI1CsB,EAAA,CAAAyB,SAAA,GAAkB;MAAlBzB,EAAA,CAAA0B,UAAA,YAAAZ,GAAA,CAAAnC,IAAA,CAAkB;MAIZqB,EAAA,CAAAyB,SAAA,GAAqB;MAArBzB,EAAA,CAAA0B,UAAA,YAAAZ,GAAA,CAAAjC,OAAA,CAAqB;MAIHmB,EAAA,CAAAyB,SAAA,GAAyB;MAAzBzB,EAAA,CAAA0B,UAAA,YAAAZ,GAAA,CAAAhC,WAAA,CAAyB;;;;;;SDRnGR,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}